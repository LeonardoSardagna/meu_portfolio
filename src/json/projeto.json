[
    {
        "id": 1,
        "titulo": "Voll-Med",
        "texto": "VollMed é uma **API RESTFUL** desenvolvida em Java usando Spring Boot. O projeto visa gerenciar o registro de médicos, pacientes e consultas, oferecendo métodos de autenticação para acessar a API. Este projeto pessoal foi desenvolvido para testar minhas habilidades com Java e Spring Boot.\n\n ## Tecnologias Usadas \n\n Java - Spring Boot \n\n \n\n MySQL \n\n \n\n Flyway (ferramenta de banco de migração de dados) \n\n  \n\n Spring Security (para o segurança) \n\n \n\n JSON Web Token (para controle de acesso) \n\n \n\n SpringDoc (para as das rotas) \n\n \n\n ## Características \n\n \n\n Inscrição do médico: Gestão completa do ciclo de vida do médico. \n\n \n\n Registro do paciente: Gestão completa do ciclo de vida do paciente. \n\n \n\n Registro de nomeação: Gerenciamento completo do ciclo de vida da nomeação. \n\n  \n\n Autenticação e Autorização: Uso de JWT para controlar o acesso à API. \n\n \n\nDocumentação de rota: Uso do SpringDoc para gerar a documentação de rota da API.\n\n ## Links: \n\n [Git-Hub](https://github.com/LeonardoSardagna/vollmed)"
    },
    {
        "id": 2,
        "titulo": "Full Stack Films",
        "texto": "Desenvolvi uma aplicação web **full stack** que permite aos usuários acessar informações detalhadas sobre séries de TV. Este projeto foi criado para aplicar e consolidar meus conhecimentos em **Java, Spring Boot, React e TypeScript**. A aplicação se destaca pela integração harmoniosa de diversas tecnologias e serviços, oferecendo uma experiência de usuário rica e intuitiva. Além disso, a utilização de práticas modernas de desenvolvimento assegura a robustez, escalabilidade e eficiência do sistema. \n\n ## Tecnologias Utilizadas: \n\n **Backend:** A aplicação é construída com o framework Spring Boot e o banco de dados PostgreSQL. \n\n**Frontend:** A interface do usuário é desenvolvida com React e TypeScript, proporcionando uma experiência interativa e responsiva.\n\n ## Links: \n\n \n\n [Front-end](https://github.com/LeonardoSardagna/reactFilms) \n\n [Back-end](https://github.com/LeonardoSardagna/javaFilms) \n\n [Publicação Linkedin](https://www.linkedin.com/feed/update/urn:li:activity:7204497261597237248/)"
    },
    {
        "id": 3,
        "titulo": "Coffe and books",
        "texto": "O principal objetivo deste site é oferecer uma experiência simplificada e eficiente aos amantes de livros. Uma das principais inovações que implementei foi a forma como os livros são gerenciados no site. Anteriormente era necessário adicionar manualmente cada livro, mas agora desenvolvi uma solução que permite a atualização automática da lista de livros através de um pedido.  \n\n ## Tecnologias Utilizadas \n\n**HTML**: Usado para estruturar o conteúdo da página.  \n\n**CSS**: Responsável pelo design e estilo da interface, proporcionando uma experiência visual agradável.  \n\n**JavaScript**: Implementado para tornar a interação do usuário mais dinâmica e gerenciar a solicitação automática de livros.  \n\n**API Swiper**: Utilizada para criar carrosséis interativos de livros, proporcionando uma experiência de navegação intuitiva. \n\n ## Links: \n\n [Git-Hub](https://github.com/LeonardoSardagna/Coffee-and-Books.git) \n\n [Versel](https://coffee-and-books.vercel.app/)"
    },
    {
        "id": 4,
        "titulo": "Pomodoro",
        "texto": "O Projeto Fokus é um sistema de cronômetro projetado para ajudar os indivíduos a se concentrarem em suas atividades diárias usando a técnica Pomodoro. Este projeto foi desenvolvido como parte de um curso de JavaScript, onde já eram fornecidos HTML e CSS, com foco principal na implementação de JavaScript.\n\n ## Temporizador Pomodoro \n\n O sistema inclui um cronômetro Pomodoro, uma técnica de gerenciamento de tempo que envolve períodos de trabalho intenso seguidos de pequenos intervalos. Isso ajuda a aumentar a produtividade e manter o foco nas tarefas.\n\n ## Controle de tempo e sons \n\n Além de monitorar o tempo das sessões Pomodoro, o sistema também pode reproduzir sons personalizados dependendo do estado do cronômetro. Isso proporciona uma experiência auditiva que complementa o gerenciamento do tempo. \n\n ## Lista de tarefas\n\n O Projeto Fokus inclui uma lista de tarefas que permite aos usuários adicionar, excluir e marcar tarefas como concluídas. Isso facilita o rastreamento das atividades planejadas. \n\n ## Links: \n\n [Git-Hub](https://github.com/LeonardoSardagna/pomodoro.git) \n\n [Versel](https://pomodoro-kappa-six.vercel.app/)"
    },
    {
        "id": 5,
        "titulo": "Organograma",
        "texto": "O projeto Rick e Morty Organo é uma aplicação web desenvolvida em React, inspirada na série animada “Rick e Morty”. Consiste em um formulário onde os usuários podem preencher informações para serem agregadas aos times, que se inspiram nos diferentes universos e personagens da série. O site também consome a API Rick and Morty para exibir alguns dos personagens da série. \n\n ## Características \n\n Formulário de Cadastro: Os usuários podem preencher informações pessoais como nome, origem, imagem, categoria. Após preencher o formulário, os usuários são automaticamente adicionados à categoria selecionada. \n\n ## Tecnologias Utilizadas \n\n **React**: biblioteca JavaScript para construção de interfaces de usuário.\n\n**HTML5**: Linguagem de marcação para estruturação de conteúdo web.\n\n**CSS3**: Linguagem de estilo para design e apresentação de sites.\n\n**API Rick e Morty**: API pública para acessar informações sobre os personagens da série.\n\n ## Links: \n\n[Git-Hub](https://github.com/LeonardoSardagna/organograma.git) \n\n [Versel](https://organograma-sigma-one.vercel.app/)"
    }
]